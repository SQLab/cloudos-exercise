{"name":"CloudOS Exercises","tagline":"Exercises of CloudOS","body":"Cloud Operating System\r\n======================\r\n\r\nExercise #1\r\n-----------\r\n\r\n### Install DevStack\r\n\r\n```\r\n$ git clone https://github.com/openstack-dev/devstack.git\r\n$ cd devstack\r\n$ ./stack.sh\r\n```\r\n\r\n### Start Your Engine\r\n\r\n#### Log In\r\n\r\n![Log In](https://raw.github.com/SQLab/cloudos-exercise/master/img/login.png)\r\n\r\n#### Launch Your First Instance\r\n\r\n![First Instance](https://raw.github.com/SQLab/cloudos-exercise/master/img/first_launch_1.png)\r\n\r\n![First Instance](https://raw.github.com/SQLab/cloudos-exercise/master/img/first_launch_2.png)\r\n\r\n#### Say Hello to the World\r\n\r\n![Ping the world](https://raw.github.com/SQLab/cloudos-exercise/master/img/ping.png)\r\n\r\n\r\n### Make Yourself a Persistent Home\r\n\r\n#### Check out existing block devices\r\n\r\n```\r\n$ find /dev/ -type b | grep vd\r\n/dev/vda\r\n```\r\n\r\n#### Add a New Volume\r\n\r\n![Adding a new volume](https://raw.github.com/SQLab/cloudos-exercise/master/img/add_new_volume_1.png)\r\n\r\n![Adding a new volume](https://raw.github.com/SQLab/cloudos-exercise/master/img/add_new_volume_2.png)\r\n\r\n#### Attach the New Volume\r\n\r\n![Attaching the new volume](https://raw.github.com/SQLab/cloudos-exercise/master/img/attach_new_volume_1.png)\r\n\r\n![Attaching the new volume](https://raw.github.com/SQLab/cloudos-exercise/master/img/attach_new_volume_2.png)\r\n\r\n```\r\n$ find /dev/ -type b | grep vd\r\n/dev/vda\r\n/dev/vdb\r\n```\r\n\r\n#### Partition the New Volume\r\n\r\n```\r\n$ sudo fdisk /dev/vdb\r\n...\r\nCommand (m for help): p\r\n\r\nDisk /dev/vdb: 1073 MB, 1073741824 bytes\r\n...\r\n\r\nCommand (m for help): n\r\n...\r\nSelect (default p): <Enter>\r\nPartition number (1-4, default 1): <Enter>\r\nFirst sector (2048-2097151, default 2048): <Enter>\r\nUsing default value 2048\r\nLast sector, +sectors or +size{K,M,G} (2048-2097151, default 2097151): <Enter>\r\nUsing default value 2097151\r\n\r\nCommand (m for help): p\r\n\r\n...\r\nDevice Boot     Start   End         Blocks      Id      System\r\n/dev/vdb1       2048    2097151     1047552     83      Linux\r\n\r\nCommand (m for help): w\r\n```\r\n\r\n#### Create filesystem and Mount the New Volume\r\n\r\n```\r\n$ sudo mkfs.ext4 /dev/vdb1\r\n...\r\n$ sudo mount /dev/vdb1 /mnt\r\n$ mount\r\n/dev/vdb1 on /mnt type ext4 (...)\r\n```\r\n\r\n\r\n### Build a Better Network\r\n\r\n#### Destruction Before Construction\r\n\r\n```\r\n$ cd devstack\r\n$ ./unstack.sh\r\n```\r\n\r\n#### Enable Neutron\r\n\r\nAdd the following into `localrc` file\r\n\r\n```\r\n# enable neutron\r\ndisable_service n-net\r\nenable_service q-svc\r\nenable_service q-agt\r\nenable_service q-dhcp\r\nenable_service q-l3\r\nenable_service q-meta\r\nenable_service neutron\r\n```\r\n\r\n#### Start Your Engine Again\r\n\r\n```\r\n$ ./stack.sh\r\n```\r\n\r\n\r\nExercise #2\r\n-----------\r\n\r\n[OpenStack Havana released on 10/17, 2013](http://www.openstack.org/software/havana/),\r\nso we're moving on to Havana. Before started the main exercises, there are a few things\r\nwe need to do first.\r\n\r\nFirst, stop devstack and pull down the latest devstack\r\n```\r\n$ cd devstack\r\n$ ./unstack.sh\r\n$ git pull\r\n```\r\n\r\nSecond, upgrade openvswitch. The version of openvswitch package in Ubuntu 12.04 is too\r\nold to work properly with the latest Neutron.\r\n```\r\n$ echo 'deb http://ubuntu-cloud.archive.canonical.com/ubuntu precise-updates/havana main' | sudo tee /etc/apt/sources.list.d/cloud-archive.list\r\n$ sudo apt-get update\r\n$ sudo apt-get install openvswitch-common openvswitch-datapath-dkms openvswitch-switch\r\n$ sudo reboot\r\n```\r\n\r\n### Multi-node Setup\r\n\r\nNormally, a production OpenStack platform would consist of three kinds of nodes,\r\ncontroller node(s), network node(s) and compute nodes. In the previous exercise,\r\nwe have built up a single node OpenStack setup. Let's call this node the controller\r\nnode in this document, though it also acts as a network node and a compute node.\r\nAnd now, we're going to add an extra compute node.\r\n\r\n#### Configure the Contoller Node\r\n\r\nModify your localrc like this, and replace <replaceme> with your settings.\r\n```\r\n# localrc\r\n\r\nDATABASE_PASSWORD=<password>\r\nRABBIT_PASSWORD=<password>\r\nSERVICE_TOKEN=<password>\r\nSERVICE_PASSWORD=<password>\r\nADMIN_PASSWORD=<password>\r\n\r\n# enable neutron\r\ndisable_service n-net\r\nenable_service q-svc\r\nenable_service q-agt\r\nenable_service q-dhcp\r\nenable_service q-l3\r\nenable_service q-meta\r\nenable_service neutron\r\n\r\nMULTI_HOST=1\r\n\r\nQ_PLUGIN=ml2\r\nENABLE_TENANT_TUNNELS=True\r\n\r\nHOST_IP=<ip address of this node>\r\nVNCSERVER_LISTEN=$HOST_IP\r\nVNCSERVER_PROXYCLIENT_ADDRESS=$HOST_IP\r\n```\r\n\r\nAnd start devstack\r\n```\r\n$ cd devstack\r\n$ ./stack.sh\r\n```\r\n\r\n#### Setup an Extra Compute Node\r\n\r\nThe host environment of the extra compute node is just the same as the original node.\r\nIt depends on how you want it to be setup. For example, if you install the controller\r\nnode as an VM, you can simply clone a new one from it, and replace the ip and hostname\r\nwith a different one. Also, don't forget to upgrade the openvswitch just like what we\r\ndid above for the controller node.\r\n\r\n#### Configure the New Compute Node\r\n\r\nModify your localrc like this, and replace <replaceme> with your settings.\r\n```\r\n# localrc\r\n\r\nDATABASE_PASSWORD=<password>\r\nRABBIT_PASSWORD=<password>\r\nSERVICE_TOKEN=<password>\r\nSERVICE_PASSWORD=<password>\r\nADMIN_PASSWORD=<password>\r\n\r\nMULTI_HOST=1\r\n\r\nSERVICE_HOST=<ip address of the controller node>\r\nGLANCE_HOSTPORT=$SERVICE_HOST:9292\r\nMYSQL_HOST=$SERVICE_HOST\r\nRABBIT_HOST=$SERVICE_HOST\r\nQ_HOST=$SERVICE_HOST\r\nMATCHMAKER_REDIS_HOST=$SERVICE_HOST\r\n\r\nENABLED_SERVICES=n-cpu,n-api,n-novnc,rabbit,q-agt,neutron\r\n\r\nQ_PLUGIN=ml2\r\nENABLE_TENANT_TUNNELS=True\r\n\r\nHOST_IP=<ip address of this node>\r\nVNCSERVER_LISTEN=$HOST_IP\r\nVNCSERVER_PROXYCLIENT_ADDRESS=$HOST_IP\r\n```\r\n\r\nAnd start devstack\r\n```\r\n$ cd devstack\r\n$ ./stack.sh\r\n```\r\n\r\n","google":"UA-42632450-3","note":"Don't delete this file! It's used internally to help with page regeneration."}